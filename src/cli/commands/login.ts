import { Command } from "commander";
import { getAuthDetailsFromEnv } from "../../env";
import { confirm, text, isCancel } from "@clack/prompts";
import { mkdir, writeFile } from "node:fs/promises";

export const login = new Command("login")
  .description("Log in to Relevance AI and get started creating AI chains")
  .action(async () => {
    const authDetails = getAuthDetailsFromEnv();
    if (authDetails.project && authDetails.region && authDetails.apiKey) {
      const confirmed = await confirm({
        message:
          "You are already logged in. Would you like to log in again? This will overwrite your current login details.",
      });

      if (!confirmed) {
        return;
      }
    }

    const open = await import("open");

    await open.default("https://chain-development.relevanceai.com/login/sdk");

    const project = await text({
      message: "Your Relevance AI project ID:",
    });
    if (isCancel(project) || !project.trim()) process.exit(1);
    const region = await text({
      message: "Your Relevance AI region:",
    });
    if (isCancel(region) || !region.trim()) process.exit(1);
    const apiKey = await text({
      message: "Your Relevance AI API key:",
    });
    if (isCancel(apiKey) || !apiKey.trim()) process.exit(1);

    const output = [
      "# Generated by `relevance login`",
      `RELEVANCE_PROJECT_ID=${project.trim()}`,
      `RELEVANCE_REGION=${region.trim()}`,
      `RELEVANCE_API_KEY=${apiKey.trim()}`,
    ].join("\n");

    await mkdir("./chains", { recursive: true });
    await writeFile("./chains/.relevance", output, "utf-8");
    await writeFile("./chains/.gitignore", ".relevance", "utf-8");
  });
